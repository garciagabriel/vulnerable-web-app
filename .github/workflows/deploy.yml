name: CI-CD Aplicacion hackacademy                                  # workflow name

on:
  push:
    branches:
      - master
  workflow_dispatch:
  
jobs:
  gitleaks:
    name: Gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        continue-on-error: true        
  horusec-security:
    name: Horusec Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Run Horusec
        env:
          HORUSEC_CLI_RETURN_ERROR_IF_FOUND_VULNERABILITY: "true"
        id: run_horusec
        uses: fike/horusec-action@v0.2.2
        with:
          arguments: -p ./ --config-file-path=horusec-config.json -O report.txt --return-error=true        
        continue-on-error: true
      - name: Current directory
        run: pwd
      - name: List directory
        run: ls
      - name: Upload  security scan result as artifact
        uses: actions/upload-artifact@v3
        with:
          name: horusec-report
          path: report.txt
  gitguardian:
    name: GitGuardian Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned          
      - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA:  ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
  snyk:
    name: Snyk Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >
            --severity-threshold=high
            --all-projects
            --sarif-file-output=snyk-code.sarif
      - name: Upload SARIF file
        #if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif 
  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "cursodevsecops-gabriel" #Must be unique in Heroku
          heroku_email: "garciagabriel.ar@gmail.com"
          remote_branch: "master"
          usedocker: true                  
